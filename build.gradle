plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = 'ru.random.walk'
version = '1.2.3'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            // Информация о проекте
            pom {
                name = 'Event exchange contract'
                description = 'Event contracts'
                url = 'https://github.com/ru-random-walk/event-exchange-contract'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'randowalkgroup'
                        name = 'Random Walk'
                        email = 'randomwalkgroup'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/ru-random-walk/event-exchange-contract.git'
                    developerConnection = 'scm:git:ssh://github.com/ru-random-walk/event-exchange-contract.git'
                    url = 'https://github.com/ru-random-walk/event-exchange-contract'
                }
            }
        }
    }
    repositories {
        maven {
            name = "Sonatype"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    destinationDir = file("${buildDir}/docs/javadoc")
}